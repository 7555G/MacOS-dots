#!/usr/bin/env bash

# output file
if [[ -z "$1" ]]; then
    OUTPUT_FILE="$(pwd)/cmake.txt"
else
    OUTPUT_FILE="$1"
fi

# prepare output file
rm "${OUTPUT_FILE}" &> /dev/null
touch "${OUTPUT_FILE}"

# function to get some command's keywords
function get_keywords() {
    command="$1"

    keywords="$(
        cmake --help-command $1 |
            awk "/$1\(/,/.*\)/" |
            sed -r "s/[[{<|]/\n/g" |
            sed -n -r 's/^ *([A-Z_][A-Z_-]*[^])}>:a-z ]).*$/\1/p'
    )"

    # return keywords if the format is correct
    if [[ "${keywords}" == [A-Z_-]* ]]; then
        echo "${keywords}"
    fi
}

# function to echo every keyword from cmake help lists
function echo_keywords() {
    local IFS=$'\n'

    # iterate over every help list
    help_options="$(cmake --help | grep -- --help.*list | xargs -L1 echo)"
    for help_option in ${help_options}; do
        help_option="${help_option% \[<f>\]*}"

        if [[ "${help_option}" == *"manual"* ||
            "${help_option}" == *"module"* ||
            "${help_option}" == *"policy"* ]]; then
            # ignore manual, module, and policy help lists
            continue
        elif [[ "${help_option}" == *"command"* ]]; then
            # for commands list: after the command name append its keywords
            for command in $(cmake "${help_option}"); do
                # return the command name
                echo "${command}"

                # return the command keywords
                get_keywords "${command}"
            done
        else
            for entry in "$(cmake ${help_option})"; do
                # return the other help lists' entries
                echo "${entry}"
            done
        fi
    done
}

function main() {
    # declare a set to store keywords
    declare -A keywords_set

    # store the discovered keywords in the set
    for keyword in $(echo_keywords); do
        keywords_set["${keyword}"]=1
    done

    # write the set to output file
    for keyword in "${!keywords_set[@]}"; do
        echo "${keyword}" >> "${OUTPUT_FILE}"
    done
}

main

# show exit status
if [ $? -eq 0 ]; then
  echo "CMake keyword list written in ${OUTPUT_FILE}"
else
  echo "Error: failed to write to ${OUTPUT_FILE}"
fi
